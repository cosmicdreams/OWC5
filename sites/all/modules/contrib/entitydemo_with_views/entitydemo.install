<?php

/**
 * @file
 * Defines the database schema for Entity demo.
 */

/**
 * Implements hook_schema().
 */
function entitydemo_schema() {
  $schema = array();

  $schema['entity_demo'] = array(
    'description' => 'The base table for entity demo.',
    'fields' => array(
      'entitydemo_id' => array(
        'description' => 'Primary Key: Identifier for a model.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'human_readable_name' => array(
        'description' => 'A human-readable identifier for entity demo',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'language' => array(
        'description' => 'The language of the entity demo',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the entity demo was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'changed' => array(
        'description' => 'The Unix timestamp when the model was most recently saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'data' => array(
        'type' => 'blob',
        'not null' => FALSE,
        'size' => 'big',
        'serialize' => TRUE,
        'description' => 'A serialized array of additional data.',
      ),
    ),
    'primary key' => array('entitydemo_id'),
  );

  return $schema;
}

/**
 * Add fields to entity demo.
 */
function entitydemo_add_attach_fields() {
  field_cache_clear();

  // Add a field -----------------------------------------------------------.
  $field = field_info_field('field_new_field_demo');
  $instance = field_info_instance('entitydemo', 'field_new_field_demo', 'entitydemo');

  if (empty($field)) {
    $field = array(
      'active' => '1',
      'cardinality' => '1',
      'deleted' => '0',
      'entity_types' => array(),
      'field_name' => 'field_new_field_demo',
      'foreign keys' => array(
        'format' => array(
          'columns' => array(
            'format' => 'format',
          ),
          'table' => 'filter_format',
        ),
      ),
      'indexes' => array(
        'format' => array(
          0 => 'format',
        ),
      ),
      'locked' => '0',
      'module' => 'text',
      'settings' => array(
        'max_length' => '255',
      ),
      'translatable' => '0',
      'type' => 'text',

    );
    $field = field_create_field($field);
  }

  if (empty($instance)) {
    $instance = array(
      'bundle' => 'entitydemo',
      'default_value' => NULL,
      'deleted' => '0',
      'description' => '',
      'display' => array(
        'default' => array(
          'label' => 'above',
          'module' => 'text',
          'settings' => array(),
          'type' => 'text_default',
          'weight' => 0,
        ),
      ),
      'entity_type' => 'entitydemo',
      'field_name' => 'field_new_field_demo',
      'label' => 'New field demo',
      'required' => 1,
      'settings' => array(
        'text_processing' => '0',
        'user_register_form' => FALSE,
      ),
      'widget' => array(
        'active' => 1,
        'module' => 'text',
        'settings' => array(
          'size' => '60',
        ),
        'type' => 'text_textfield',
        'weight' => '1',
      ),
    );

    field_create_instance($instance);
  }

  /* Add a field end -----------------------------------------------.
   * Add an other field here.
   */

  // ----------------------- End ----------------------------------
  // No move this function or add field after.
  field_cache_clear();
}

/**
 * Implements hook_enable().
 */
function entitydemo_enable() {
  // Attach demo field to entity demo.
  entitydemo_add_attach_fields();
}

/**
 * Implements hook_uninstall().
 */
function entitydemo_uninstall() {
  // Delete instances.
  module_load_include('module', 'entitydemo');
  entitydemo_delete_instances('entitydemo', 'entitydemo');

  // Delete field.
  $field = field_info_field('field_new_field_demo');
  if (!empty($field)) {
    field_delete_field('field_new_field_demo');
  }

  // Remove table.
  db_drop_table('entity_demo');
}
